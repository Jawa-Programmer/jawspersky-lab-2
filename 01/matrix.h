
#ifndef MATRIX_H
#define MATRIX_H
/// класс прямоугольной матрицы
class matrix
{
	private:
	/// функция, в которую пользователь может вставить критерий отбора числа.
	bool (*_comparator)(int);
	/// массив указателей на массив чисел
	int **_arr;
	/// количество строк и столбцов
	int _m, _n;
	/// строка чисел b.
	int* _b;
	public:	
	/// конструктор. производит выделение памяти под матрицу
	matrix(int, int);
	/// деструктор. очищает память
	~matrix();
	/// выводит на экран матрицу
	void print();
	/// производит вычисление вектора b
	void calculate();
	/// выводит на экран искомый вектор b
	void print_b();
	/// оператор доступа к i строке. Позволителен синтаксис прямой работы с двумерной матрицей a[i][j] = x;
	int*& operator[] (const int);
	/// возвращает количество строк в матрице.
	int rows(){return _m;}
	/// возвращает количество столбцов в матрице.
	int coulms(){return _n;}
	/// устанавливает функцию-предикат, отбирающая числа строки для сложения.
	void set_comparator(bool (*pred)(int));
};
#endif